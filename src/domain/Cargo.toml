[package]
name = "domain"
version = "0.1.0"
authors = ["Manolo Saen <manolosaenzok79@gmail.com>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[workspace]
members = ["entities", "repositories", "use_cases"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = { version = "0.2.75", features = ["serde-serialize"] }
entities = {version = "0.1.0", path = "./entities"}
use_cases = {version = "0.1.0", path = "./use_cases"}
repositories = {version = "0.1.0", path = "./repositories"}
js-sys = {version = "0.3.52"}
uuid = { version = "0.8.2", features = ["serde", "v4", "wasm-bindgen"] }
serde_json = { version = "1.0.66", default-features = false, features = ["alloc"] }
serde-wasm-bindgen = "0.3.0"
wasm-bindgen-futures = "0.4.25"
serde = { version = "1.0.127", features = ["derive"] }



# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
